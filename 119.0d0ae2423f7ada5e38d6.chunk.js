(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{380:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/sass-loader"><img src="https://img.shields.io/npm/v/sass-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/sass-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/sass-loader"><img src="https://david-dm.org/webpack-contrib/sass-loader.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/sass-loader/actions"><img src="https://github.com/webpack-contrib/sass-loader/workflows/sass-loader/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/sass-loader"><img src="https://codecov.io/gh/webpack-contrib/sass-loader/branch/master/graph/badge.svg" alt="coverage"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=sass-loader"><img src="https://packagephobia.now.sh/badge?p=sass-loader" alt="size"></a></p>\n<p>Loads a Sass/SCSS file and compiles it to CSS.</p>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To begin, you\'ll need to install <code>sass-loader</code>:</p>\n<pre><code class="hljs language-console">npm install sass-loader sass webpack --save-dev\n</code></pre>\n<p><code>sass-loader</code> requires you to install either <a href="https://github.com/sass/dart-sass">Dart Sass</a> or <a href="https://github.com/sass/node-sass">Node Sass</a> on your own (more documentation can be found below).</p>\n<p>This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</p>\n<blockquote>\n<p>ℹ️ We highly recommend using <a href="https://github.com/sass/dart-sass">Dart Sass</a>.</p>\n<p>⚠ <a href="https://github.com/sass/node-sass">Node Sass</a> does not work with <a href="https://classic.yarnpkg.com/en/docs/pnp/">Yarn PnP</a> feature and doesn\'t support <a href="https://sass-lang.com/documentation/at-rules/use">@use rule</a>.</p>\n</blockquote>\n<p>Chain the <code>sass-loader</code> with the <a href="/loaders/css-loader/">css-loader</a> and the <a href="/loaders/style-loader/">style-loader</a> to immediately apply all styles to the DOM or the <a href="/plugins/mini-css-extract-plugin/">mini-css-extract-plugin</a> to extract it into a separate file.</p>\n<p>Then add the loader to your Webpack configuration. For example:</p>\n<p><strong>app.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token string">"./style.scss"</span><span class="token punctuation">;</span></code></pre>\n<p><strong>style.scss</strong></p>\n<pre><code class="hljs language-scss">$body-color: red;\n\nbody {\n  color: $body-color;\n}\n</code></pre>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// Creates `style` nodes from JS strings</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token comment">// Translates CSS into CommonJS</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token comment">// Compiles Sass to CSS</span>\n          <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Finally run <code>webpack</code> via your preferred method.</p>\n<h3 id="resolving-import-at-rules">Resolving <code>import</code> at-rules<a href="#resolving-import-at-rules" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Webpack provides an <a href="/concepts/module-resolution/">advanced mechanism to resolve files</a>.</p>\n<p>The <code>sass-loader</code> uses Sass\'s custom importer feature to pass all queries to the Webpack resolving engine.\nThus you can import your Sass modules from <code>node_modules</code>.</p>\n<pre><code class="hljs language-scss">@import "bootstrap";\n</code></pre>\n<p>Using <code>~</code> is deprecated and can be removed from your code (<strong>we recommend it</strong>), but we still support it for historical reasons.\nWhy can you remove it? The loader will first try to resolve <code>@import</code> as a relative path. If it cannot be resolved, then the loader will try to resolve <code>@import</code> inside <a href="/configuration/resolve/#resolvemodules"><code>node_modules</code></a>.</p>\n<p>Prepending module paths with a <code>~</code> tells webpack to search through <a href="/configuration/resolve/#resolvemodules"><code>node_modules</code></a>.</p>\n<pre><code class="hljs language-scss">@import "~bootstrap";\n</code></pre>\n<p>It\'s important to prepend it with only <code>~</code>, because <code>~/</code> resolves to the home directory.\nWebpack needs to distinguish between <code>bootstrap</code> and <code>~bootstrap</code> because CSS and Sass files have no special syntax for importing relative files.\nWriting <code>@import "style.scss"</code> is the same as <code>@import "./style.scss";</code></p>\n<h3 id="problems-with-url">Problems with <code>url(...)</code><a href="#problems-with-url" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Since Sass implementations don\'t provide <a href="https://github.com/sass/libsass/issues/532">url rewriting</a>, all linked assets must be relative to the output.</p>\n<ul>\n<li>If you pass the generated CSS on to the <code>css-loader</code>, all urls must be relative to the entry-file (e.g. <code>main.scss</code>).</li>\n<li>If you\'re just generating CSS without passing it to the <code>css-loader</code>, it must be relative to your web root.</li>\n</ul>\n<p>You will be disrupted by this first issue. It is natural to expect relative references to be resolved against the <code>.sass</code>/<code>.scss</code> file in which they are specified (like in regular <code>.css</code> files).</p>\n<p>Thankfully there are a two solutions to this problem:</p>\n<ul>\n<li>Add the missing url rewriting using the <a href="https://github.com/bholloway/resolve-url-loader">resolve-url-loader</a>. Place it before <code>sass-loader</code> in the loader chain.</li>\n<li>Library authors usually provide a variable to modify the asset path. <a href="https://github.com/twbs/bootstrap-sass">bootstrap-sass</a> for example has an <code>$icon-font-path</code>.</li>\n</ul>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#implementation"><code>implementation</code></a></strong><p class="description mobile"><code>{Object\\|String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object\\|String}</code></td>\n<td align="center"><code>sass</code></td>\n<td align="left">Setup Sass implementation to use.</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#sassoptions"><code>sassOptions</code></a></strong><p class="description mobile"><code>{Object\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object\\|Function}</code></td>\n<td align="center">defaults values for Sass implementation</td>\n<td align="left">Options for Sass.</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#sourcemap"><code>sourceMap</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>compiler.devtool</code></td>\n<td align="left">Enables/Disables generation of source maps.</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#additionaldata"><code>additionalData</code></a></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Prepends/Appends \n<code>Sass</code>\n/\n<code>SCSS</code>\n code before the actual entry file.</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#webpackimporter"><code>webpackImporter</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>true</code></td>\n<td align="left">Enables/Disables the default Webpack importer.</td>\n</tr>\n</tbody>\n</table>\n<h3 id="implementation"><code>implementation</code><a href="#implementation" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Object | String</code>\nDefault: <code>sass</code></p>\n<p>The special <code>implementation</code> option determines which implementation of Sass to use.</p>\n<p>By default the loader resolve the implementation based on your dependencies.\nJust add required implementation to <code>package.json</code> (<code>sass</code> or <code>node-sass</code> package) and install dependencies.</p>\n<p>Example where the <code>sass-loader</code> loader uses the <code>sass</code> (<code>dart-sass</code>) implementation:</p>\n<p><strong>package.json</strong></p>\n<pre><code class="hljs language-json"><span class="token punctuation">{</span>\n  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"sass-loader"</span><span class="token operator">:</span> <span class="token string">"^7.2.0"</span><span class="token punctuation">,</span>\n    <span class="token property">"sass"</span><span class="token operator">:</span> <span class="token string">"^1.22.10"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>Example where the <code>sass-loader</code> loader uses the <code>node-sass</code> implementation:</p>\n<p><strong>package.json</strong></p>\n<pre><code class="hljs language-json"><span class="token punctuation">{</span>\n  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"sass-loader"</span><span class="token operator">:</span> <span class="token string">"^7.2.0"</span><span class="token punctuation">,</span>\n    <span class="token property">"node-sass"</span><span class="token operator">:</span> <span class="token string">"^5.0.0"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>Beware the situation when <code>node-sass</code> and <code>sass</code> were installed! By default the <code>sass-loader</code> prefers <code>sass</code>.\nIn order to avoid this situation you can use the <code>implementation</code> option.</p>\n<p>The <code>implementation</code> options either accepts <code>sass</code> (<code>Dart Sass</code>) or <code>node-sass</code> as a module.</p>\n<h4 id="object">Object<a href="#object" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>For example, to use Dart Sass, you\'d pass:</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// Prefer `dart-sass`</span>\n              implementation<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sass"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="string">String<a href="#string" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>For example, to use Dart Sass, you\'d pass:</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// Prefer `dart-sass`</span>\n              implementation<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"sass"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Note that when using <code>sass</code> (<code>Dart Sass</code>), <strong>synchronous compilation is twice as fast as asynchronous compilation</strong> by default, due to the overhead of asynchronous callbacks.\nTo avoid this overhead, you can use the <a href="https://www.npmjs.com/package/fibers">fibers</a> package to call asynchronous importers from the synchronous code path.</p>\n<p>We automatically inject the <a href="https://github.com/laverdet/node-fibers"><code>fibers</code></a> package (setup <code>sassOptions.fiber</code>) for <code>Node.js</code> less v16.0.0 if is possible (i.e. you need install the <a href="https://github.com/laverdet/node-fibers"><code>fibers</code></a> package).</p>\n<blockquote>\n<p>Fibers is not compatible with <code>Node.js</code> v16.0.0 or later (<a href="https://github.com/laverdet/node-fibers">see introduction to readme</a>).</p>\n</blockquote>\n<p><strong>package.json</strong></p>\n<pre><code class="hljs language-json"><span class="token punctuation">{</span>\n  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"sass-loader"</span><span class="token operator">:</span> <span class="token string">"^7.2.0"</span><span class="token punctuation">,</span>\n    <span class="token property">"sass"</span><span class="token operator">:</span> <span class="token string">"^1.22.10"</span><span class="token punctuation">,</span>\n    <span class="token property">"fibers"</span><span class="token operator">:</span> <span class="token string">"^4.0.1"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>\n<p>You can disable automatically injecting the <a href="https://github.com/laverdet/node-fibers"><code>fibers</code></a> package by passing a <code>false</code> value for the <code>sassOptions.fiber</code> option.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              implementation<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sass"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                fiber<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>You can also pass the <code>fiber</code> value using this code:</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              implementation<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sass"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                fiber<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fibers"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="sassoptions"><code>sassOptions</code><a href="#sassoptions" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Object|Function</code>\nDefault: defaults values for Sass implementation</p>\n<p>Options for <a href="http://sass-lang.com/dart-sass">Dart Sass</a> or <a href="https://github.com/sass/node-sass">Node Sass</a> implementation.</p>\n<blockquote>\n<p>ℹ️ The <code>indentedSyntax</code> option has <code>true</code> value for the <code>sass</code> extension.</p>\n<p>ℹ️ Options such as <code>data</code> and <code>file</code> are unavailable and will be ignored.</p>\n<p>ℹ We recommend not to set the <code>outFile</code>, <code>sourceMapContents</code>, <code>sourceMapEmbed</code>, <code>sourceMapRoot</code> options because <code>sass-loader</code> automatically sets these options when the <code>sourceMap</code> option is <code>true</code>.</p>\n<p>ℹ️ Access to the <a href="/api/loaders/#the-loader-context">loader context</a> inside the custom importer can be done using the <code>this.webpackLoaderContext</code> property.</p>\n</blockquote>\n<p>There is a slight difference between the <code>sass</code> (<code>dart-sass</code>) and <code>node-sass</code> options.</p>\n<p>Please consult documentation before using them:</p>\n<ul>\n<li><a href="https://github.com/sass/dart-sass#javascript-api">Dart Sass documentation</a> for all available <code>sass</code> options.</li>\n<li><a href="https://github.com/sass/node-sass/#options">Node Sass documentation</a> for all available <code>node-sass</code> options.</li>\n</ul>\n<h4 id="object-1"><code>Object</code><a href="#object-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Use and object for the Sass implementation setup.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                indentWidth<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n                includePaths<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"absolute/path/a"</span><span class="token punctuation">,</span> <span class="token string">"absolute/path/b"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="function"><code>Function</code><a href="#function" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Allows to setup the Sass implementation by setting different options based on the loader context.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">(</span>loaderContext<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// More information about available properties https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">"styles/foo.scss"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                    includePaths<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"absolute/path/c"</span><span class="token punctuation">,</span> <span class="token string">"absolute/path/d"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                  includePaths<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"absolute/path/a"</span><span class="token punctuation">,</span> <span class="token string">"absolute/path/b"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="sourcemap"><code>sourceMap</code><a href="#sourcemap" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: depends on the <code>compiler.devtool</code> value</p>\n<p>Enables/Disables generation of source maps.</p>\n<p>By default generation of source maps depends on the <a href="/configuration/devtool/"><code>devtool</code></a> option.\nAll values enable source map generation except <code>eval</code> and <code>false</code> value.</p>\n<blockquote>\n<p>ℹ If a <code>true</code> the <code>sourceMap</code>, <code>sourceMapRoot</code>, <code>sourceMapEmbed</code>, <code>sourceMapContents</code> and <code>omitSourceMapUrl</code> from <code>sassOptions</code> will be ignored.</p>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<blockquote>\n<p>ℹ In some rare cases <code>node-sass</code> can output invalid source maps (it is a <code>node-sass</code> bug).</p>\n<blockquote>\n<p>In order to avoid this, you can try to update <code>node-sass</code> to latest version or you can try to set within <code>sassOptions</code> the <code>outputStyle</code> option to <code>compressed</code>.</p>\n</blockquote>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              sassOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                outputStyle<span class="token punctuation">:</span> <span class="token string">"compressed"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="additionaldata"><code>additionalData</code><a href="#additionaldata" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|Function</code>\nDefault: <code>undefined</code></p>\n<p>Prepends <code>Sass</code>/<code>SCSS</code> code before the actual entry file.\nIn this case, the <code>sass-loader</code> will not override the <code>data</code> option but just <strong>prepend</strong> the entry\'s content.</p>\n<p>This is especially useful when some of your Sass variables depend on the environment:</p>\n<h4 id="string-1"><code>String</code><a href="#string-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              additionalData<span class="token punctuation">:</span> <span class="token string">"$env: "</span> <span class="token operator">+</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">+</span> <span class="token string">";"</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="function-1"><code>Function</code><a href="#function-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<h5 id="sync">Sync<a href="#sync" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              additionalData<span class="token punctuation">:</span> <span class="token punctuation">(</span>content<span class="token punctuation">,</span> loaderContext<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// More information about available properties https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">"styles/foo.scss"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token string">"$value: 100px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token string">"$value: 200px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h5 id="async">Async<a href="#async" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              additionalData<span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>content<span class="token punctuation">,</span> loaderContext<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// More information about available properties https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">"styles/foo.scss"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token string">"$value: 100px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token string">"$value: 200px;"</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="webpackimporter"><code>webpackImporter</code><a href="#webpackimporter" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: <code>true</code></p>\n<p>Enables/Disables the default Webpack importer.</p>\n<p>This can improve performance in some cases. Use it with caution because aliases and <code>@import</code> at-rules starting with <code>~</code> will not work.\nYou can pass own <code>importer</code> to solve this (see <a href="https://github.com/sass/node-sass#importer--v200---experimental"><code>importer docs</code></a>).</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              webpackImporter<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="examples">Examples<a href="#examples" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="extracts-css-into-separate-files">Extracts CSS into separate files<a href="#extracts-css-into-separate-files" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>For production builds it\'s recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.</p>\n<p>There are two possibilities to extract a style sheet from the bundle:</p>\n<ul>\n<li><a href="/plugins/mini-css-extract-plugin/">mini-css-extract-plugin</a></li>\n<li><a href="https://github.com/peerigon/extract-loader">extract-loader</a> (simpler, but specialized on the css-loader\'s output)</li>\n</ul>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// fallback to style-loader in development</span>\n          process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">"production"</span>\n            <span class="token operator">?</span> <span class="token string">"style-loader"</span>\n            <span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n      <span class="token comment">// both options are optional</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">"[id].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="source-maps">Source maps<a href="#source-maps" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Enables/Disables generation of source maps.</p>\n<p>To enable CSS source maps, you\'ll need to pass the <code>sourceMap</code> option to the <code>sass-loader</code> <em>and</em> the css-loader.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  devtool<span class="token punctuation">:</span> <span class="token string">"source-map"</span><span class="token punctuation">,</span> <span class="token comment">// any "source-map"-like devtool is possible</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.s[ac]ss$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token string">"style-loader"</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>If you want to edit the original Sass files inside Chrome, <a href="https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0">there\'s a good blog post</a>. Checkout <a href="https://github.com/webpack-contrib/sass-loader/tree/master/test">test/sourceMap</a> for a running example.</p>\n<h2 id="contributing">Contributing<a href="#contributing" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<p><a href="https://github.com/webpack-contrib/sass-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/sass-loader/blob/master/LICENSE">MIT</a></p>\n'}}]);