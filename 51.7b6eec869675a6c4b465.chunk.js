(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{312:function(n,s,a){"use strict";a.r(s),s.default='<p>The <code>stats</code> option lets you precisely control what bundle information gets displayed. This can be a nice middle ground if you don\'t want to use <code>quiet</code> or <code>noInfo</code> because you want some bundle information, but not all of it.</p>\n<blockquote class="tip">\n<p>For webpack-dev-server, this property needs to be in the <code>devServer</code> object.</p>\n</blockquote>\n<blockquote class="tip">\n<p>For webpack-dev-middleware, this property needs to be in the webpack-dev-middleware\'s <code>options</code> object.</p>\n</blockquote>\n<blockquote class="warning">\n<p>This option does not have any effect when using the Node.js API.</p>\n</blockquote>\n<h2 id="stats"><code>stats</code><a href="#stats" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>object</code> <code>string</code></p>\n<p>There are some presets available to use as a shortcut. Use them like this:</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token string">\'errors-only\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<table>\n<thead>\n<tr>\n<th>Preset</th>\n<th>Alternative</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><div class="title"><p>Preset</p><p>Alternative</p><p>Description</p></div>\n<div class="content"><p><code>\'errors-only\'</code><p class="description mobile"><em>none</em></p></p></div></td>\n<td class="description desktop"><em>none</em></td>\n<td>Only output when errors happen</td>\n</tr>\n<tr>\n<td><div class="title"><p>Preset</p><p>Alternative</p><p>Description</p></div>\n<div class="content"><p><code>\'errors-warnings\'</code><p class="description mobile"><em>none</em></p></p></div></td>\n<td class="description desktop"><em>none</em></td>\n<td>Only output errors and warnings happen</td>\n</tr>\n<tr>\n<td><div class="title"><p>Preset</p><p>Alternative</p><p>Description</p></div>\n<div class="content"><p><code>\'minimal\'</code><p class="description mobile"><em>none</em></p></p></div></td>\n<td class="description desktop"><em>none</em></td>\n<td>Only output when errors or new compilation happen</td>\n</tr>\n<tr>\n<td><div class="title"><p>Preset</p><p>Alternative</p><p>Description</p></div>\n<div class="content"><p><code>\'none\'</code><p class="description mobile"><code>false</code></p></p></div></td>\n<td class="description desktop"><code>false</code></td>\n<td>Output nothing</td>\n</tr>\n<tr>\n<td><div class="title"><p>Preset</p><p>Alternative</p><p>Description</p></div>\n<div class="content"><p><code>\'normal\'</code><p class="description mobile"><code>true</code></p></p></div></td>\n<td class="description desktop"><code>true</code></td>\n<td>Standard output</td>\n</tr>\n<tr>\n<td><div class="title"><p>Preset</p><p>Alternative</p><p>Description</p></div>\n<div class="content"><p><code>\'verbose\'</code><p class="description mobile"><em>none</em></p></p></div></td>\n<td class="description desktop"><em>none</em></td>\n<td>Output everything</td>\n</tr>\n</tbody>\n</table>\n<p>For more granular control, it is possible to specify exactly what information you want. Please note that all of the options in this object are optional.</p>\n<h3 id="statsall"><code>stats.all</code><a href="#statsall" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>A fallback value for stats options when an option is not defined. It has precedence over local webpack defaults.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    all<span class="token punctuation">:</span> undefined\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsassets"><code>stats.assets</code><a href="#statsassets" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to show the asset information. Set <code>stats.assets</code> to <code>false</code> to hide it.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    assets<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsassetssort"><code>stats.assetsSort</code><a href="#statsassetssort" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>string = \'id\'</code></p>\n<p>Tells <code>stats</code> to sort the assets by a given field. All of the <a href="#sorting-fields">sorting fields</a> are allowed to be used as values for <code>stats.assetsSort</code>. Use <code>!</code> prefix in the value to reverse the sort order by a given field.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    assetsSort<span class="token punctuation">:</span> <span class="token string">\'!size\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsbuiltat"><code>stats.builtAt</code><a href="#statsbuiltat" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add the build date and the build time information. Set <code>stats.builtAt</code> to <code>false</code> to hide it.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    builtAt<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statscached"><code>stats.cached</code><a href="#statscached" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the cached modules (not the ones that were built).</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    cached<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statscachedassets"><code>stats.cachedAssets</code><a href="#statscachedassets" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the cached assets. Setting <code>stats.cachedAssets</code> to <code>false</code> will tell <code>stats</code> to only show the emitted files (not the ones that were built).</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    cachedAssets<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statschildren"><code>stats.children</code><a href="#statschildren" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the children.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    children<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statschunks"><code>stats.chunks</code><a href="#statschunks" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the chunk. Setting <code>stats.chunks</code> to <code>false</code> results in a less verbose output.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    chunks<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statschunkgroups"><code>stats.chunkGroups</code><a href="#statschunkgroups" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the <code>namedChunkGroups</code>.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    chunkGroups<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statschunkmodules"><code>stats.chunkModules</code><a href="#statschunkmodules" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the built modules to information about the chunk.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    chunkModules<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statschunkorigins"><code>stats.chunkOrigins</code><a href="#statschunkorigins" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the origins of chunks and chunk merging.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    chunkOrigins<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statschunkssort"><code>stats.chunksSort</code><a href="#statschunkssort" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>string = \'id\'</code></p>\n<p>Tells <code>stats</code> to sort the chunks by a given field. All of the <a href="#sorting-fields">sorting fields</a> are allowed to be used as values for <code>stats.chunksSort</code>. Use <code>!</code> prefix in the value to reverse the sort order by a given field.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    chunksSort<span class="token punctuation">:</span> <span class="token string">\'name\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statscontext"><code>stats.context</code><a href="#statscontext" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>string = \'../src/\'</code></p>\n<p>Sets the context directory for shortening the request information.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    context<span class="token punctuation">:</span> <span class="token string">\'../src/components/\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statscolors"><code>stats.colors</code><a href="#statscolors" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = false</code> <code>object</code></p>\n<p>Tells <code>stats</code> whether to output in the different colors.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    colors<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p> It is also available as a CLI flag:</p>\n<pre><code class="hljs language-bash">webpack-cli --colors</code></pre>\n<p> You can specify your own terminal output colors using <a href="https://en.wikipedia.org/wiki/ANSI_escape_code">ANSI escape sequences</a></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  colors<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    green<span class="token punctuation">:</span> <span class="token string">\'\\u001b[32m\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsdepth"><code>stats.depth</code><a href="#statsdepth" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = false</code></p>\n<p>Tells <code>stats</code> whether to display the distance from the entry point for each module.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    depth<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsentrypoints"><code>stats.entrypoints</code><a href="#statsentrypoints" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to display the entry points with the corresponding bundles.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    entrypoints<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsenv"><code>stats.env</code><a href="#statsenv" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = false</code></p>\n<p>Tells <code>stats</code> whether to display the <code>--env</code> information.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    env<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statserrors"><code>stats.errors</code><a href="#statserrors" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to display the errors.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    errors<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statserrordetails"><code>stats.errorDetails</code><a href="#statserrordetails" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add the details to the errors.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    errorDetails<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsexcludeassets"><code>stats.excludeAssets</code><a href="#statsexcludeassets" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>array = []: string | RegExp | function (assetName) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (assetName) => boolean</code></p>\n<p>Tells <code>stats</code> to exclude the matching assets information. This can be done with a <code>string</code>, a <code>RegExp</code>, a <code>function</code> that is getting the assets name as an argument and returns a <code>boolean</code>. <code>stats.excludeAssets</code> can be an <code>array</code> of any of the above.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    excludeAssets<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token string">\'filter\'</span><span class="token punctuation">,</span>\n      <span class="token regex">/filter/</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span>assetName<span class="token punctuation">)</span> <span class="token operator">=></span> assetName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">\'moduleA\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsexcludemodules"><code>stats.excludeModules</code><a href="#statsexcludemodules" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>array = []: string | RegExp | function (assetName) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (assetName) => boolean</code> <code>boolean: false</code></p>\n<p>Tells <code>stats</code> to exclude the matching modules information. This can be done with a <code>string</code>, a <code>RegExp</code>, a <code>function</code> that is getting the module\'s source as an argument and returns a <code>boolean</code>. <code>stats.excludeModules</code> can be an <code>array</code> of any of the above. <code>stats.excludeModules</code>\'s configuration <a href="https://github.com/webpack/webpack/blob/master/lib/Stats.js#L215">is merged</a> with the <code>stats.exclude</code>\'s configuration value.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    excludeModules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token string">\'filter\'</span><span class="token punctuation">,</span>\n      <span class="token regex">/filter/</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span>moduleSource<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token boolean">true</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Setting <code>stats.excludeModules</code> to <code>false</code> will disable the exclude behaviour.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    excludeModules<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsexclude"><code>stats.exclude</code><a href="#statsexclude" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>See <a href="#statsexcludemodules"><code>stats.excludeModules</code></a>.</p>\n<h3 id="statshash"><code>stats.hash</code><a href="#statshash" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the hash of the compilation.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    hash<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statslogging"><code>stats.logging</code><a href="#statslogging" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>string = \'info\': \'none\' | \'error\' | \'warn\' | \'info\' | \'log\' | \'verbose\'</code> <code>boolean</code></p>\n<p>Tells <code>stats</code> whether to add logging output.</p>\n<ul>\n<li><code>\'none\'</code>, <code>false</code> - disable logging</li>\n<li><code>\'error\'</code> - errors only</li>\n<li><code>\'warn\'</code> - errors and warnings only</li>\n<li><code>\'info\'</code> - errors, warnings, and info messages</li>\n<li><code>\'log\'</code>, <code>true</code> - errors, warnings, info messages, log messages, groups, clears. Collapsed groups are displayed in a collapsed state.</li>\n<li><code>\'verbose\'</code> - log everything except debug and trace. Collapsed groups are displayed in expanded state.</li>\n</ul>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    logging<span class="token punctuation">:</span> <span class="token string">\'verbose\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsloggingdebug"><code>stats.loggingDebug</code><a href="#statsloggingdebug" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>array = []: string | RegExp | function (name) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (name) => boolean</code></p>\n<p>Tells <code>stats</code> to include the debug information of the specified loggers such as Plugins or Loaders. When <a href="#statslogging"><code>stats.logging</code></a> is set to <code>false</code>, <code>stats.loggingDebug</code> option is ignored.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    loggingDebug<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token string">\'MyPlugin\'</span><span class="token punctuation">,</span>\n      <span class="token regex">/MyPlugin/</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=></span> name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">\'MyPlugin\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsloggingtrace"><code>stats.loggingTrace</code><a href="#statsloggingtrace" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Enable stack traces in the logging output for errors, warnings and traces. Set <code>stats.loggingTrace</code> to hide the trace.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    loggingTrace<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsmaxmodules"><code>stats.maxModules</code><a href="#statsmaxmodules" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>number = 15</code></p>\n<p>Set the maximum number of modules to be shown.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    maxModules<span class="token punctuation">:</span> <span class="token number">5</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsmodules"><code>stats.modules</code><a href="#statsmodules" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> whether to add information about the built modules.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    modules<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsmodulessort"><code>stats.modulesSort</code><a href="#statsmodulessort" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>string = \'id\'</code></p>\n<p>Tells <code>stats</code> to sort the modules by a given field. All of the <a href="#sorting-fields">sorting fields</a> are allowed to be used as values for <code>stats.modulesSort</code>. Use <code>!</code> prefix in the value to reverse the sort order by a given field.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    modulesSort<span class="token punctuation">:</span> <span class="token string">\'size\'</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsmoduletrace"><code>stats.moduleTrace</code><a href="#statsmoduletrace" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to show dependencies and the origin of warnings/errors. <code>stats.moduleTrace</code> is available since webpack 2.5.0.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    moduleTrace<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsoutputpath"><code>stats.outputPath</code><a href="#statsoutputpath" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to show the <code>outputPath</code>.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    outputPath<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsperformance"><code>stats.performance</code><a href="#statsperformance" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to show performance hint when the file size exceeds <a href="/configuration/performance/#performancemaxassetsize"><code>performance.maxAssetSize</code></a>.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    performance<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsprovidedexports"><code>stats.providedExports</code><a href="#statsprovidedexports" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = false</code></p>\n<p>Tells <code>stats</code> to show the exports of the modules.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    providedExports<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statspublicpath"><code>stats.publicPath</code><a href="#statspublicpath" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to show the <code>publicPath</code>.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    publicPath<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsreasons"><code>stats.reasons</code><a href="#statsreasons" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to add information about the reasons of why modules are included.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    reasons<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statssource"><code>stats.source</code><a href="#statssource" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = false</code></p>\n<p>Tells <code>stats</code> to add the source code of modules.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    source<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statstimings"><code>stats.timings</code><a href="#statstimings" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to add the timing information.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    timings<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsusedexports"><code>stats.usedExports</code><a href="#statsusedexports" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = false</code></p>\n<p>Tells <code>stats</code> whether to show which exports of a module are used.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    usedExports<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statsversion"><code>stats.version</code><a href="#statsversion" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to add information about the webpack version used.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    version<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statswarnings"><code>stats.warnings</code><a href="#statswarnings" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>boolean = true</code></p>\n<p>Tells <code>stats</code> to add warnings.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    warnings<span class="token punctuation">:</span> <span class="token boolean">false</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="statswarningsfilter"><code>stats.warningsFilter</code><a href="#statswarningsfilter" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>array = []: string | RegExp | function (warning) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (warning) => boolean</code></p>\n<p>Tells <code>stats</code> to exclude the warnings that are matching given filters. This can be done with a <code>string</code>, a <code>RegExp</code>, a <code>function</code> that is getting a warning as an argument and returns a <code>boolean</code>. <code>stats.warningsFilter</code> can be an <code>array</code> of any of the above.</p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    warningsFilter<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token string">\'filter\'</span><span class="token punctuation">,</span>\n      <span class="token regex">/filter/</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span>warning<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token boolean">true</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="sorting-fields">Sorting fields<a href="#sorting-fields" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>For <code>assetsSort</code>, <code>chunksSort</code> and <code>modulesSort</code> there are several possible fields that you can sort items by:</p>\n<ul>\n<li><code>\'id\'</code> is the item\'s id;</li>\n<li><code>\'name\'</code> - a item\'s name that was assigned to it upon importing;</li>\n<li><code>\'size\'</code> - a size of item in bytes;</li>\n<li><code>\'chunks\'</code> - what chunks the item originates from (for example, if there are multiple subchunks for one chunk - the subchunks will be grouped together according to their main chunk);</li>\n<li><code>\'errors\'</code> - amount of errors in items;</li>\n<li><code>\'warnings\'</code> - amount of warnings in items;</li>\n<li><code>\'failed\'</code> - whether the item has failed compilation;</li>\n<li><code>\'cacheable\'</code> - whether the item is cacheable;</li>\n<li><code>\'built\'</code> - whether the asset has been built;</li>\n<li><code>\'prefetched\'</code> - whether the asset will be prefetched;</li>\n<li><code>\'optional\'</code> - whether the asset is optional;</li>\n<li><code>\'identifier\'</code> - identifier of the item;</li>\n<li><code>\'index\'</code> - item\'s processing index;</li>\n<li><code>\'index2\'</code></li>\n<li><code>\'profile\'</code></li>\n<li><code>\'issuer\'</code> - an identifier of the issuer;</li>\n<li><code>\'issuerId\'</code> - an id of the issuer;</li>\n<li><code>\'issuerName\'</code> - a name of the issuer;</li>\n<li><code>\'issuerPath\'</code> - a full issuer object. There\'s no real need to sort by this field;</li>\n</ul>\n<h3 id="extending-stats-behaviours">Extending stats behaviours<a href="#extending-stats-behaviours" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you want to use one of the pre-defined behaviours e.g. <code>\'minimal\'</code> but still override one or more of the rules, see <a href="https://github.com/webpack/webpack/blob/master/lib/Stats.js#L1394-L1401">the source code</a>. You would want to copy the configuration options from <code>case \'minimal\': ...</code> and add your additional rules while providing an object to <code>stats</code>.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//..</span>\n  stats<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// copied from `\'minimal\'`</span>\n    all<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    modules<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    maxModules<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    errors<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    warnings<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token comment">// our additional options</span>\n    moduleTrace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    errorDetails<span class="token punctuation">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n'}}]);