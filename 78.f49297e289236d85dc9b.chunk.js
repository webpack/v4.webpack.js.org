(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{339:function(n,a,s){"use strict";s.r(a),a.default='<p>Let\'s start by clearing up a common misconception. webpack is a module bundler like <a href="http://browserify.org/">Browserify</a> or <a href="https://brunch.io/">Brunch</a>. It is <em>not a task runner</em> like <a href="https://www.gnu.org/software/make/">Make</a>, <a href="https://gruntjs.com/">Grunt</a>, or <a href="https://gulpjs.com/">Gulp</a>. Task runners handle automation of common development tasks such as linting, building, or testing your project. Compared to bundlers, task runners have a higher level focus. You can still benefit from their higher level tooling while leaving the problem of bundling to webpack.</p>\n<p>Bundlers help you get your JavaScript and stylesheets ready for deployment, transforming them into a format that\'s suitable for the browser. For example, JavaScript can be <a href="/plugins/terser-webpack-plugin">minified</a> or <a href="/guides/code-splitting">split into chunks</a> and <a href="/guides/lazy-loading">lazy-loaded</a> to improve performance. Bundling is one of the most important challenges in web development, and solving it well can remove a lot of pain from the process.</p>\n<p>The good news is that, while there is some overlap, task runners and bundlers can play well together if approached in the right way. This guide provides a high-level overview of how webpack can be integrated into some of the more popular task runners.</p>\n<h2 id="npm-scripts">NPM Scripts<a href="#npm-scripts" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Often webpack users use npm <a href="https://docs.npmjs.com/misc/scripts"><code>scripts</code></a> as their task runner. This is a good starting point. Cross-platform support can become a problem, but there are several workarounds for that. Many, if not most users, get by with simple npm <code>scripts</code> and various levels of webpack configuration and tooling.</p>\n<p>So while webpack\'s core focus is bundling, there are a variety of extensions that can enable you to use it for jobs typical of a task runner. Integrating a separate tool adds complexity, so be sure to weigh the pros and cons before going forward.</p>\n<h2 id="grunt">Grunt<a href="#grunt" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>For those using Grunt, we recommend the <a href="https://www.npmjs.com/package/grunt-webpack"><code>grunt-webpack</code></a> package. With <code>grunt-webpack</code> you can run webpack or <a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a> as a task, get access to stats within <a href="https://gruntjs.com/api/grunt.template">template tags</a>, split development and production configurations and more. Start by installing <code>grunt-webpack</code> as well as <code>webpack</code> itself if you haven\'t already:</p>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev grunt-webpack webpack</code></pre>\n<p>Then register a configuration and load the task:</p>\n<p><strong>Gruntfile.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> webpackConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./webpack.config.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>grunt<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  grunt<span class="token punctuation">.</span><span class="token function">initConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    webpack<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        stats<span class="token punctuation">:</span> <span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">||</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">\'development\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      prod<span class="token punctuation">:</span> webpackConfig<span class="token punctuation">,</span>\n      dev<span class="token punctuation">:</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> watch<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> webpackConfig<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  grunt<span class="token punctuation">.</span><span class="token function">loadNpmTasks</span><span class="token punctuation">(</span><span class="token string">\'grunt-webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>For more information, please visit the <a href="https://github.com/webpack-contrib/grunt-webpack">repository</a>.</p>\n<h2 id="gulp">Gulp<a href="#gulp" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Gulp is also a fairly straightforward integration with the help of the <a href="https://github.com/shama/webpack-stream"><code>webpack-stream</code></a> package (a.k.a. <code>gulp-webpack</code>). In this case, it is unnecessary to install <code>webpack</code> separately as it is a direct dependency of <code>webpack-stream</code>:</p>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack-stream</code></pre>\n<p>Just <code>require(\'webpack-stream\')</code> instead of <code>webpack</code> and optionally pass it an configuration:</p>\n<p><strong>gulpfile.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'gulp\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack-stream\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ngulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">\'default\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">\'src/entry.js\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">webpack</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Any configuration options...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">\'dist/\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>For more information, please visit the <a href="https://github.com/shama/webpack-stream">repository</a>.</p>\n<h2 id="mocha">Mocha<a href="#mocha" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>The <a href="https://github.com/zinserjan/mocha-webpack"><code>mocha-webpack</code></a> utility can be used for a clean integration with Mocha. The repository offers more details on the pros and cons but essentially <code>mocha-webpack</code> is a simple wrapper that provides almost the same CLI as Mocha itself and provides various webpack functionality like an improved watch mode and improved path resolution. Here is a small example of how you would install it and use it to run a test suite (found within <code>./test</code>):</p>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack mocha mocha-webpack\nmocha-webpack <span class="token string">\'test/**/*.js\'</span></code></pre>\n<p>For more information, please visit the <a href="https://github.com/zinserjan/mocha-webpack">repository</a>.</p>\n<h2 id="karma">Karma<a href="#karma" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>The <a href="https://github.com/webpack-contrib/karma-webpack"><code>karma-webpack</code></a> package allows you to use webpack to pre-process files in <a href="https://karma-runner.github.io/1.0/index.html">Karma</a>. It also makes use of <a href="https://github.com/webpack/webpack-dev-middleware"><code>webpack-dev-middleware</code></a> and allows passing configurations for both. A simple example may look something like this:</p>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack karma karma-webpack</code></pre>\n<p><strong>karma.conf.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  config<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    files<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> pattern<span class="token punctuation">:</span> <span class="token string">\'test/*_test.js\'</span><span class="token punctuation">,</span> watched<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> pattern<span class="token punctuation">:</span> <span class="token string">\'test/**/*_test.js\'</span><span class="token punctuation">,</span> watched<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    preprocessors<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token string">\'test/*_test.js\'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">\'webpack\'</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string">\'test/**/*_test.js\'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">\'webpack\'</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    webpack<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Any custom webpack configuration...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    webpackMiddleware<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Any custom webpack-dev-middleware configuration...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>For more information, please visit the <a href="https://github.com/webpack-contrib/karma-webpack">repository</a>.</p>\n'}}]);