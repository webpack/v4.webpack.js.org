(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{401:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/mini-css-extract-plugin"><img src="https://img.shields.io/npm/v/mini-css-extract-plugin.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/mini-css-extract-plugin.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/mini-css-extract-plugin"><img src="https://david-dm.org/webpack-contrib/mini-css-extract-plugin.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/mini-css-extract-plugin/actions"><img src="https://github.com/webpack-contrib/mini-css-extract-plugin/workflows/mini-css-extract-plugin/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin"><img src="https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin/branch/master/graph/badge.svg" alt="coverage"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=mini-css-extract-plugin"><img src="https://packagephobia.now.sh/badge?p=mini-css-extract-plugin" alt="size"></a></p>\n<p>This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</p>\n<p>It builds on top of a new webpack v4 feature (module types) and requires webpack 4 to work.</p>\n<p>Compared to the extract-text-webpack-plugin:</p>\n<ul>\n<li>Async loading</li>\n<li>No duplicate compilation (performance)</li>\n<li>Easier to use</li>\n<li>Specific to CSS</li>\n</ul>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To begin, you\'ll need to install <code>mini-css-extract-plugin</code>:</p>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev mini-css-extract-plugin</code></pre>\n<p>It\'s recommended to combine <code>mini-css-extract-plugin</code> with the <a href="/loaders/css-loader/"><code>css-loader</code></a></p>\n<p>Then add the loader and the plugin to your <code>webpack</code> config. For example:</p>\n<p><strong>style.css</strong></p>\n<pre><code class="hljs language-css"><span class="token selector">body</span> <span class="token punctuation">{</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n<p><strong>component.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token string">"./style.css"</span><span class="token punctuation">;</span></code></pre>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="plugin-options">Plugin Options<a href="#plugin-options" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#filename"><code>filename</code></a></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>[name].css</code></td>\n<td align="left">This option determines the name of each output CSS file</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#chunkfilename"><code>chunkFilename</code></a></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>based on filename</code></td>\n<td align="left">This option determines the name of non-entry chunk files</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#ignoreorder"><code>ignoreOrder</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Remove Order Warnings</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#insert"><code>insert</code></a></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>document.head.appendChild(linkTag);</code></td>\n<td align="left">Inserts \n<code>&#x3C;link></code>\n at the given position</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#attributes"><code>attributes</code></a></strong><p class="description mobile"><code>{Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object}</code></td>\n<td align="center"><code>{}</code></td>\n<td align="left">Adds custom attributes to tag</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#linktype"><code>linkType</code></a></strong><p class="description mobile"><code>{String\\|Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Boolean}</code></td>\n<td align="center"><code>text/css</code></td>\n<td align="left">Allows loading asynchronous chunks with a custom link type</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#experimentaluseimportmodule"><code>experimentalUseImportModule</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>false</code></td>\n<td align="left">Use an experimental webpack API to execute modules instead of child compilers</td>\n</tr>\n</tbody>\n</table>\n<h4 id="filename"><code>filename</code><a href="#filename" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>String|Function</code>\nDefault: <code>[name].css</code></p>\n<p>This option determines the name of each output CSS file.</p>\n<p>Works like <a href="/configuration/output/#outputfilename"><code>output.filename</code></a></p>\n<h4 id="chunkfilename"><code>chunkFilename</code><a href="#chunkfilename" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>String|Function</code>\nDefault: <code>based on filename</code></p>\n<blockquote>\n<p>i Specifying <code>chunkFilename</code> as a <code>function</code> is only available in webpack@5</p>\n</blockquote>\n<p>This option determines the name of non-entry chunk files.</p>\n<p>Works like <a href="/configuration/output/#outputchunkfilename"><code>output.chunkFilename</code></a></p>\n<h4 id="ignoreorder"><code>ignoreOrder</code><a href="#ignoreorder" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>Boolean</code>\nDefault: <code>false</code></p>\n<p>Remove Order Warnings.\nSee <a href="#remove-order-warnings">examples</a> below for details.</p>\n<h4 id="insert"><code>insert</code><a href="#insert" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>String|Function</code>\nDefault: <code>document.head.appendChild(linkTag);</code></p>\n<p>By default, the <code>mini-css-extract-plugin</code> appends styles (<code>&#x3C;link></code> elements) to <code>document.head</code> of the current <code>window</code>.</p>\n<p>However in some circumstances it might be necessary to have finer control over the append target or even delay <code>link</code> elements insertion.\nFor example this is the case when you asynchronously load styles for an application that runs inside of an iframe.\nIn such cases <code>insert</code> can be configured to be a function or a custom selector.</p>\n<p>If you target an <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement">iframe</a> make sure that the parent document has sufficient access rights to reach into the frame document and append elements to it.</p>\n<h5 id="string"><code>String</code><a href="#string" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p>Allows to setup custom <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector">query selector</a>.\nA new <code>&#x3C;link></code> element will be inserted after the found item.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  insert<span class="token punctuation">:</span> <span class="token string">"#some-element"</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>A new <code>&#x3C;link></code> element will be inserted after the element with id <code>some-element</code>.</p>\n<h5 id="function"><code>Function</code><a href="#function" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p>Allows to override default behavior and insert styles at any position.</p>\n<blockquote>\n<p>⚠ Do not forget that this code will run in the browser alongside your application. Since not all browsers support latest ECMA features like <code>let</code>, <code>const</code>, <code>arrow function expression</code> and etc we recommend you to use only ECMA 5 features and syntax.</p>\n<blockquote>\n<p>⚠ The <code>insert</code> function is serialized to string and passed to the plugin. This means that it won\'t have access to the scope of the webpack configuration module.</p>\n</blockquote>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  insert<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>linkTag<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> reference <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#some-element"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>reference<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      reference<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>linkTag<span class="token punctuation">,</span> reference<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>A new <code>&#x3C;link></code> element will be inserted before the element with id <code>some-element</code>.</p>\n<h4 id="attributes"><code>attributes</code><a href="#attributes" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>Object</code>\nDefault: <code>{}</code></p>\n<p>If defined, the <code>mini-css-extract-plugin</code> will attach given attributes with their values on <link> element.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      attributes<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        id<span class="token punctuation">:</span> <span class="token string">"target"</span><span class="token punctuation">,</span>\n        <span class="token string">"data-target"</span><span class="token punctuation">:</span> <span class="token string">"example"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Note: It\'s only applied to dynamically loaded css chunks, if you want to modify link attributes inside html file, please using <a href="https://github.com/jantimon/html-webpack-plugin">html-webpack-plugin</a></p>\n<h4 id="linktype"><code>linkType</code><a href="#linktype" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>String|Boolean</code>\nDefault: <code>text/css</code></p>\n<p>This option allows loading asynchronous chunks with a custom link type, such as &#x3C;link type="text/css" ...>.</p>\n<h5 id="string-1"><code>String</code><a href="#string-1" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p>Possible values: <code>text/css</code></p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      linkType<span class="token punctuation">:</span> <span class="token string">"text/css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h5 id="boolean"><code>Boolean</code><a href="#boolean" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p><code>false</code> disables the link <code>type</code> attribute</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      linkType<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="experimentaluseimportmodule"><code>experimentalUseImportModule</code><a href="#experimentaluseimportmodule" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Use an experimental webpack API to execute modules instead of child compilers.</p>\n<p>This improves performance and memory usage a lot, but isn\'t as stable as the normal approach.</p>\n<p>When combined with <code>experiments.layers</code>, this adds a <code>layer</code> option to the loader options to specify the layer of the css execution.</p>\n<p>You need to have at least webpack 5.33.2.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      experimentalUseImportModule<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="loader-options">Loader Options<a href="#loader-options" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#publicpath"><code>publicPath</code></a></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>webpackOptions.output.publicPath</code></td>\n<td align="left">Specifies a custom public path for the external resources like images, files, etc</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#emit"><code>emit</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>true</code></td>\n<td align="left">If false, the plugin will extract the CSS but \n<strong>will not</strong>\n emit the file</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#esmodule"><code>esModule</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>true</code></td>\n<td align="left">Use ES modules syntax</td>\n</tr>\n</tbody>\n</table>\n<h4 id="publicpath"><code>publicPath</code><a href="#publicpath" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>String|Function</code>\nDefault: the <code>publicPath</code> in <code>webpackOptions.output</code></p>\n<p>Specifies a custom public path for the external resources like images, files, etc inside <code>CSS</code>.\nWorks like <a href="/configuration/output/#outputpublicpath"><code>output.publicPath</code></a></p>\n<h5 id="string-2"><code>String</code><a href="#string-2" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n      <span class="token comment">// both options are optional</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">"[id].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              publicPath<span class="token punctuation">:</span> <span class="token string">"/public/path/to/"</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h5 id="function-1"><code>Function</code><a href="#function-1" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n      <span class="token comment">// both options are optional</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">"[id].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              publicPath<span class="token punctuation">:</span> <span class="token punctuation">(</span>resourcePath<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>resourcePath<span class="token punctuation">)</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="emit"><code>emit</code><a href="#emit" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>Boolean</code>\nDefault: <code>true</code></p>\n<p>If true, emits a file (writes a file to the filesystem). If false, the plugin will extract the CSS but <strong>will not</strong> emit the file.\nIt is often useful to disable this option for server-side packages.</p>\n<h4 id="esmodule"><code>esModule</code><a href="#esmodule" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Type: <code>Boolean</code>\nDefault: <code>true</code></p>\n<p>By default, <code>mini-css-extract-plugin</code> generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of <a href="/plugins/module-concatenation-plugin/">module concatenation</a> and <a href="/guides/tree-shaking/">tree shaking</a>.</p>\n<p>You can enable a CommonJS syntax using:</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              esModule<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="examples">Examples<a href="#examples" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="recommend">Recommend<a href="#recommend" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>For <code>production</code> builds it\'s recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\nThis can be achieved by using the <code>mini-css-extract-plugin</code>, because it creates separate css files.\nFor <code>development</code> mode (including <code>webpack-dev-server</code>) you can use <a href="/loaders/style-loader/">style-loader</a>, because it injects CSS into the DOM using multiple <style></style> and works faster.</p>\n<blockquote>\n<p>i Do not use together <code>style-loader</code> and <code>mini-css-extract-plugin</code>.</p>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> devMode <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">"production"</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.(sa|sc|c)ss$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          devMode <span class="token operator">?</span> <span class="token string">"style-loader"</span> <span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>devMode <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="minimal-example">Minimal example<a href="#minimal-example" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n      <span class="token comment">// all options are optional</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">"[id].css"</span><span class="token punctuation">,</span>\n      ignoreOrder<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// Enable to remove warnings about conflicting order</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              <span class="token comment">// you can specify a publicPath here</span>\n              <span class="token comment">// by default it uses publicPath in webpackOptions.output</span>\n              publicPath<span class="token punctuation">:</span> <span class="token string">"../"</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="named-export-for-css-modules">Named export for CSS Modules<a href="#named-export-for-css-modules" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<blockquote>\n<p>⚠ Names of locals are converted to <code>camelCase</code>.</p>\n<p>⚠ It is not allowed to use JavaScript reserved words in css class names.</p>\n<p>⚠ Options <code>esModule</code> and <code>modules.namedExport</code> in <code>css-loader</code> should be enabled.</p>\n</blockquote>\n<p><strong>styles.css</strong></p>\n<pre><code class="hljs language-css"><span class="token selector">.foo-baz</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.bar</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>\n<p><strong>index.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> fooBaz<span class="token punctuation">,</span> bar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"./styles.css"</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fooBaz<span class="token punctuation">,</span> bar<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>You can enable a ES module named export using:</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              esModule<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n              modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                namedExport<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                localIdentName<span class="token punctuation">:</span> <span class="token string">"foo__[name]__[local]"</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="the-publicpath-option-as-function">The <code>publicPath</code> option as function<a href="#the-publicpath-option-as-function" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n      <span class="token comment">// both options are optional</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">"[id].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              publicPath<span class="token punctuation">:</span> <span class="token punctuation">(</span>resourcePath<span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// publicPath is the relative path of the resource to the context</span>\n                <span class="token comment">// e.g. for ./css/admin/main.css the publicPath will be ../../</span>\n                <span class="token comment">// while for ./css/main.css the publicPath will be ../</span>\n                <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>resourcePath<span class="token punctuation">)</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="advanced-configuration-example">Advanced configuration example<a href="#advanced-configuration-example" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>This plugin should not be used with <code>style-loader</code> in the loaders chain.</p>\n<p>Here is an example to have both HMR in <code>development</code> and your styles extracted in a file for <code>production</code> builds.</p>\n<p>(Loaders options left out for clarity, adapt accordingly to your needs.)</p>\n<p>You should not use <code>HotModuleReplacementPlugin</code> plugin if you are using a <code>webpack-dev-server</code>.\n<code>webpack-dev-server</code> enables / disables HMR using <code>hot</code> option.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> devMode <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">"production"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n    <span class="token comment">// both options are optional</span>\n    filename<span class="token punctuation">:</span> devMode <span class="token operator">?</span> <span class="token string">"[name].css"</span> <span class="token punctuation">:</span> <span class="token string">"[name].[contenthash].css"</span><span class="token punctuation">,</span>\n    chunkFilename<span class="token punctuation">:</span> devMode <span class="token operator">?</span> <span class="token string">"[id].css"</span> <span class="token punctuation">:</span> <span class="token string">"[id].[contenthash].css"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>devMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// only enable hot in development</span>\n  plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.(sa|sc|c)ss$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>\n          <span class="token string">"sass-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="hot-module-reloading-hmr">Hot Module Reloading (HMR)<a href="#hot-module-reloading-hmr" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Note: HMR is automatically supported in webpack 5. No need to configure it. Skip the following:</p>\n<p>The <code>mini-css-extract-plugin</code> supports hot reloading of actual css files in development.\nSome options are provided to enable HMR of both standard stylesheets and locally scoped CSS or CSS modules.\nBelow is an example configuration of mini-css for HMR use with CSS modules.</p>\n<p>You should not use <code>HotModuleReplacementPlugin</code> plugin if you are using a <code>webpack-dev-server</code>.\n<code>webpack-dev-server</code> enables / disables HMR using <code>hot</code> option.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"webpack"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token comment">// Options similar to the same options in webpackOptions.output</span>\n    <span class="token comment">// both options are optional</span>\n    filename<span class="token punctuation">:</span> devMode <span class="token operator">?</span> <span class="token string">"[name].css"</span> <span class="token punctuation">:</span> <span class="token string">"[name].[contenthash].css"</span><span class="token punctuation">,</span>\n    chunkFilename<span class="token punctuation">:</span> devMode <span class="token operator">?</span> <span class="token string">"[id].css"</span> <span class="token punctuation">:</span> <span class="token string">"[id].[contenthash].css"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>devMode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// only enable hot in development</span>\n  plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token string">"css-loader"</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="minimizing-for-production">Minimizing For Production<a href="#minimizing-for-production" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>To minify the output, use a plugin like <a href="/plugins/css-minimizer-webpack-plugin/">css-minimizer-webpack-plugin</a>.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> CssMinimizerPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"css-minimizer-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">"[id].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// For webpack@5 you can use the `...` syntax to extend existing minimizers (i.e. `terser-webpack-plugin`), uncomment the next line</span>\n      <span class="token comment">// `...`,</span>\n      <span class="token keyword">new</span> <span class="token class-name">CssMinimizerPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>This will enable CSS optimization only in production mode. If you want to run it also in development set the <code>optimization.minimize</code> option to true.</p>\n<h3 id="using-preloaded-or-inlined-css">Using preloaded or inlined CSS<a href="#using-preloaded-or-inlined-css" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>The runtime code detects already added CSS via <code>&#x3C;link></code> or <code>&#x3C;style></code> tag.\nThis can be useful when injecting CSS on server-side for Server-Side-Rendering.\nThe <code>href</code> of the <code>&#x3C;link></code> tag has to match the URL that will be used for loading the CSS chunk.\nThe <code>data-href</code> attribute can be used for <code>&#x3C;link></code> and <code>&#x3C;style></code> too.\nWhen inlining CSS <code>data-href</code> must be used.</p>\n<h3 id="extracting-all-css-in-a-single-file">Extracting all CSS in a single file<a href="#extracting-all-css-in-a-single-file" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>The CSS can be extracted in one CSS file using <code>optimization.splitChunks.cacheGroups</code>.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    splitChunks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      cacheGroups<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        styles<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          name<span class="token punctuation">:</span> <span class="token string">"styles"</span><span class="token punctuation">,</span>\n          type<span class="token punctuation">:</span> <span class="token string">"css/mini-extract"</span><span class="token punctuation">,</span>\n          <span class="token comment">// For webpack@4</span>\n          <span class="token comment">// test: /\\.css$/,</span>\n          chunks<span class="token punctuation">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>\n          enforce<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Note that <code>type</code> should be used instead of <code>test</code> in Webpack 5, or else an extra <code>.js</code> file can be generated besides the <code>.css</code> file. This is because <code>test</code> doesn\'t know which modules should be dropped (in this case, it won\'t detect that <code>.js</code> should be dropped).</p>\n<h3 id="extracting-css-based-on-entry">Extracting CSS based on entry<a href="#extracting-css-based-on-entry" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>You may also extract the CSS based on the webpack entry name.\nThis is especially useful if you import routes dynamically but want to keep your CSS bundled according to entry.\nThis also prevents the CSS duplication issue one had with the ExtractTextPlugin.</p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> issuer <span class="token operator">=</span> c<span class="token punctuation">.</span>moduleGraph<span class="token punctuation">.</span><span class="token function">getIssuer</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// For webpack@4 issuer = m.issuer</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>issuer<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span>issuer<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> chunks <span class="token operator">=</span> c<span class="token punctuation">.</span>chunkGraph<span class="token punctuation">.</span><span class="token function">getModuleChunks</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// For webpack@4 chunks = m._chunks</span>\n\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> chunk<span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"src/foo"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    bar<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"src/bar"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    splitChunks<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      cacheGroups<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        fooStyles<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          name<span class="token punctuation">:</span> <span class="token string">"styles_foo"</span><span class="token punctuation">,</span>\n          test<span class="token punctuation">:</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">,</span> entry <span class="token operator">=</span> <span class="token string">"foo"</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n            m<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">"CssModule"</span> <span class="token operator">&#x26;&#x26;</span>\n            <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token operator">===</span> entry<span class="token punctuation">,</span>\n          chunks<span class="token punctuation">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>\n          enforce<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        barStyles<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          name<span class="token punctuation">:</span> <span class="token string">"styles_bar"</span><span class="token punctuation">,</span>\n          test<span class="token punctuation">:</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">,</span> entry <span class="token operator">=</span> <span class="token string">"bar"</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n            m<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">"CssModule"</span> <span class="token operator">&#x26;&#x26;</span>\n            <span class="token function">recursiveIssuer</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token operator">===</span> entry<span class="token punctuation">,</span>\n          chunks<span class="token punctuation">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>\n          enforce<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="filename-option-as-function">Filename Option as function<a href="#filename-option-as-function" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>With the <code>filename</code> option you can use chunk data to customize the filename.\nThis is particularly useful when dealing with multiple entry points and wanting to get more control out of the filename for a given entry point/chunk.\nIn the example below, we\'ll use <code>filename</code> to output the generated css into a different directory.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> chunk <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>chunk<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"/js/"</span><span class="token punctuation">,</span> <span class="token string">"/css/"</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.css`</span></span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="long-term-caching">Long Term Caching<a href="#long-term-caching" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>For long term caching use <code>filename: "[contenthash].css"</code>. Optionally add <code>[name]</code>.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token punctuation">:</span> <span class="token string">"[name].[contenthash].css"</span><span class="token punctuation">,</span>\n      chunkFilename<span class="token punctuation">:</span> <span class="token string">"[id].[contenthash].css"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="remove-order-warnings">Remove Order Warnings<a href="#remove-order-warnings" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>For projects where css ordering has been mitigated through consistent use of scoping or naming conventions, the css order warnings can be disabled by setting the ignoreOrder flag to true for the plugin.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      ignoreOrder<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.css$/i</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="media-query-plugin">Media Query Plugin<a href="#media-query-plugin" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you\'d like to extract the media queries from the extracted CSS (so mobile users don\'t need to load desktop or tablet specific CSS anymore) you should use one of the following plugins:</p>\n<ul>\n<li><a href="https://github.com/SassNinja/media-query-plugin">Media Query Plugin</a></li>\n<li><a href="https://github.com/mike-diamond/media-query-splitting-plugin">Media Query Splitting Plugin</a></li>\n</ul>\n<h2 id="contributing">Contributing<a href="#contributing" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<p><a href="https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/LICENSE">MIT</a></p>\n'}}]);