(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{422:function(n,a,s){"use strict";s.r(a),a.default='<p>While writing your code, you may have already added many code split points to load stuff on demand. After compiling you might notice that some chunks are too small - creating larger HTTP overhead. <code>LimitChunkCountPlugin</code> can post-process your chunks by merging them.</p>\n<pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>LimitChunkCountPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// Options...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>The following options are supported:</p>\n<h3 id="maxchunks"><code>maxChunks</code><a href="#maxchunks" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>number</code></p>\n<p>Limit the maximum number of chunks using a value greater than or equal to <code>1</code>. Using <code>1</code> will prevent any additional chunks from being added as the entry/main chunk is also included in the count.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-javascript"><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>LimitChunkCountPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      maxChunks<span class="token punctuation">:</span> <span class="token number">5</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="minchunksize"><code>minChunkSize</code><a href="#minchunksize" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Keeping chunk size above the specified limit is no longer a feature of this plugin. Use [MinChunkSizePlugin)[/plugins/min-chunk-size-plugin] instead.</p>\n<h2 id="usage-via-cli">Usage via CLI<a href="#usage-via-cli" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>This plugin and it\'s options can also be invoked via the <a href="/api/cli/">CLI</a>:</p>\n<pre><code class="hljs language-bash">webpack --optimize-max-chunks 15</code></pre>\n'}}]);