(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{365:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://www.npmjs.com/package/imports-loader"><img src="https://img.shields.io/npm/v/imports-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/imports-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/imports-loader"><img src="https://david-dm.org/webpack-contrib/imports-loader.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/imports-loader/actions"><img src="https://github.com/webpack-contrib/imports-loader/workflows/imports-loader/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/imports-loader"><img src="https://codecov.io/gh/webpack-contrib/imports-loader/branch/master/graph/badge.svg" alt="cover"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=imports-loader"><img src="https://packagephobia.now.sh/badge?p=imports-loader" alt="size"></a></p>\n<p>The imports loader allows you to use modules that depend on specific global variables.</p>\n<p>This is useful for third-party modules that rely on global variables like <code>$</code> or <code>this</code> being the <code>window</code> object.\nThe imports loader can add the necessary <code>require(\'whatever\')</code> calls, so those modules work with webpack.</p>\n<p>For further hints on compatibility issues, check out <a href="/guides/shimming/">Shimming</a> of the official docs.</p>\n<blockquote>\n<p>⚠ By default loader generate ES module named syntax.</p>\n<p>⚠ Be careful, existing imports (<code>import</code>/<code>require</code>) in the original code and importing new values can cause failure.</p>\n</blockquote>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To begin, you\'ll need to install <code>imports-loader</code>:</p>\n<pre><code class="hljs language-console">$ npm install imports-loader --save-dev\n</code></pre>\n<p>Given you have this file:</p>\n<p><strong>example.js</strong></p>\n<pre><code class="hljs language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">\'img\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doSomeAwesomeJqueryPluginStuff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<p>Then you can inject the <code>jquery</code> value into the module by configuring the <code>imports-loader</code> using two approaches.</p>\n<h3 id="inline">Inline<a href="#inline" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>The <code>|</code> or <code>%20</code> (space) allow to separate the <code>syntax</code>, <code>moduleName</code>, <code>name</code> and <code>alias</code> of import.\nThe documentation and syntax examples can be read <a href="#syntax">here</a>.</p>\n<blockquote>\n<p>⚠ <code>%20</code> is space in a query string, because you can\'t use spaces in URLs</p>\n</blockquote>\n<pre><code class="hljs language-js"><span class="token comment">// Alternative syntax:</span>\n<span class="token comment">//</span>\n<span class="token comment">// import myLib from \'imports-loader?imports=default%20jquery%20$!./example.js\';</span>\n<span class="token comment">//</span>\n<span class="token comment">// `%20` is space in a query string, equivalently `default jquery $`</span>\n<span class="token keyword">import</span> myLib <span class="token keyword">from</span> <span class="token string">\'imports-loader?imports=default|jquery|$!./example.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the beginning of example.js:</span>\n<span class="token comment">//</span>\n<span class="token comment">// import $ from "jquery";</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> myLib <span class="token keyword">from</span> <span class="token string">\'imports-loader?imports=default|jquery|$,angular!./example.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// `|` is separator in a query string, equivalently `default|jquery|$` and `angular`</span>\n<span class="token comment">// Adds the following code to the beginning of example.js:</span>\n<span class="token comment">//</span>\n<span class="token comment">// import $ from "jquery";</span>\n<span class="token comment">// import angular from "angular";</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> myLib <span class="token keyword">from</span> <span class="token string">\'imports-loader?imports=named|library|myMethod,angular!./example.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// `|` is separator in a query string, equivalently `named|library|myMethod` and `angular`</span>\n<span class="token comment">// Adds the following code to the beginning of example.js:</span>\n<span class="token comment">//</span>\n<span class="token comment">// import { myMethod } from "library";</span>\n<span class="token comment">// import angular from "angular";</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> myLib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`imports-loader?type=commonjs&#x26;imports=single|jquery|$,angular!./example.js`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// `|` is separator in a query string, equivalently `single|jquery|$` and `angular`</span>\n<span class="token comment">// Adds the following code to the beginning of example.js:</span>\n<span class="token comment">//</span>\n<span class="token comment">// var $ = require("jquery");</span>\n<span class="token comment">// var angular = require("angular");</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> myLib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`imports-loader?type=commonjs&#x26;imports=single|myLib|myMethod&#x26;wrapper=window&#x26;!./example.js`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// `|` is separator in a query string, equivalently `single|myLib|myMethod` and `angular`</span>\n<span class="token comment">// Adds the following code to the example.js:</span>\n<span class="token comment">//</span>\n<span class="token comment">// const myMethod = require(\'myLib\');</span>\n<span class="token comment">//</span>\n<span class="token comment">// (function () {</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// }.call(window));</span></code></pre>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> myLib <span class="token keyword">from</span> <span class="token string">\'imports-loader?additionalCode=var%20myVariable%20=%20false;!./example.js\'</span><span class="token punctuation">;</span>\n<span class="token comment">// Adds the following code to the beginning of example.js:</span>\n<span class="token comment">//</span>\n<span class="token comment">// var myVariable = false;</span>\n<span class="token comment">//</span>\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h3 id="using-configuration">Using Configuration<a href="#using-configuration" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token comment">// You can use `regexp`</span>\n        <span class="token comment">// test: /example\\.js/$</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                <span class="token string">\'default jquery $\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'default lib_2 lib_2_default\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'named lib_3 lib2_method_1\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'named lib_3 lib2_method_2 lib_2_method_2_short\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'namespace lib_4 my_namespace\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'side-effects lib_5\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  syntax<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                  moduleName<span class="token punctuation">:</span> <span class="token string">\'angular\'</span><span class="token punctuation">,</span>\n                  name<span class="token punctuation">:</span> <span class="token string">\'angular\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> lib_2_default <span class="token keyword">from</span> <span class="token string">\'lib_2\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> lib2_method_1<span class="token punctuation">,</span> lib2_method_2 <span class="token keyword">as</span> lib_2_method_2_short <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'lib_3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> my_namespace <span class="token keyword">from</span> <span class="token string">\'lib_4\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'lib_5\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> angular <span class="token keyword">from</span> <span class="token string">\'angular\'</span><span class="token punctuation">;</span></code></pre>\n<p>And run <code>webpack</code> via your preferred method.</p>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#type"><code>type</code></a></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>module</code></td>\n<td align="left">Format of generated imports</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#imports"><code>imports</code></a></strong><p class="description mobile"><code>{String\\|Object\\|Array&#x3C;String\\|Object>}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Object\\|Array&#x3C;String\\|Object>}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">List of imports</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#wrapper"><code>wrapper</code></a></strong><p class="description mobile"><code>{Boolean\\|String\\|Object}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean\\|String\\|Object}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Closes the module code in a function (\n<code>(function () { ... }).call();</code>\n)</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#additionalcode"><code>additionalCode</code></a></strong><p class="description mobile"><code>{String}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Adds custom code</td>\n</tr>\n</tbody>\n</table>\n<h3 id="type"><code>type</code><a href="#type" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>module</code></p>\n<p>Format of generated exports.</p>\n<p>Possible values - <code>commonjs</code> (CommonJS module syntax) and <code>module</code> (ES module syntax).</p>\n<h4 id="commonjs"><code>commonjs</code><a href="#commonjs" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          syntax<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          imports<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">var</span> Foo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'Foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h4 id="module"><code>module</code><a href="#module" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'module\'</span><span class="token punctuation">,</span>\n          imports<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">\'Foo\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h3 id="imports"><code>imports</code><a href="#imports" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|Object|Array&#x3C;String|Object></code>\nDefault: <code>undefined</code></p>\n<p>List of imports.</p>\n<h4 id="string"><code>String</code><a href="#string" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Allows to use a string to describe an export.</p>\n<h5 id="syntax"><code>Syntax</code><a href="#syntax" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p>The <code>|</code> or <code>%20</code> (space) allow to separate the <code>syntax</code>, <code>moduleName</code>, <code>name</code> and <code>alias</code> of import.</p>\n<p>String syntax - <code>[[syntax] [moduleName] [name] [alias]]</code> or <code>[[syntax]|[moduleName]|[name]|[alias]]</code>, where:</p>\n<ul>\n<li>\n<p><code>[syntax]</code> (<strong>may be omitted</strong>):</p>\n<ul>\n<li>if <code>type</code> is <code>module</code>- can be <code>default</code>, <code>named</code>, <code>namespace</code> or <code>side-effects</code>, the default value is <code>default</code>.</li>\n<li>if <code>type</code> is <code>commonjs</code>- can be <code>single</code>, <code>multiple</code> or <code>pure</code>, the default value is <code>single</code>.</li>\n</ul>\n</li>\n<li>\n<p><code>[moduleName]</code> - name of an imported module (<strong>required</strong>)</p>\n</li>\n<li>\n<p><code>[name]</code> - name of an imported value (<strong>required</strong>)</p>\n</li>\n<li>\n<p><code>[alias]</code> - alias of an imported value (<strong>may be omitted</strong>)</p>\n</li>\n</ul>\n<p>Examples:</p>\n<p>If type <code>module</code>:</p>\n<ul>\n<li><code>[Foo]</code> - generates <code>import Foo from "Foo";</code>.</li>\n<li><code>[default Foo]</code> - generates <code>import Foo from "Foo";</code>.</li>\n<li><code>[default ./my-lib Foo]</code> - generates <code>import Foo from "./my-lib";</code>.</li>\n<li><code>[named Foo FooA]</code> - generates <code>import { FooA } from "Foo";</code>.</li>\n<li><code>[named Foo FooA Bar]</code> - generates <code>import { FooA as Bar } from "Foo";</code>.</li>\n<li><code>[namespace Foo FooA]</code> - generates <code>import * as FooA from "Foo";</code>.</li>\n<li><code>[side-effects Foo]</code> - generates <code>import "Foo";</code>.</li>\n</ul>\n<p>If type <code>commonjs</code>:</p>\n<ul>\n<li><code>[Foo]</code> - generates <code>const Foo = require("Foo");</code>.</li>\n<li><code>[single Foo]</code> - generates <code>const Foo = require("Foo");</code>.</li>\n<li><code>[single ./my-lib Foo]</code> - generates <code>const Foo = require("./my-lib");</code>.</li>\n<li><code>[multiple Foo FooA Bar]</code> - generates <code>const { FooA: Bar } = require("Foo");</code>.</li>\n<li><code>[pure Foo]</code> - generates <code>require("Foo");</code>.</li>\n</ul>\n<blockquote>\n<p>⚠ You need to set <code>type: "commonjs"</code> to use <code>single</code>, <code>multiple</code> and <code>pure</code> syntaxes.</p>\n<p>⚠ Aliases can\'t be used together with <code>default</code>, <code>namespace</code>, <code>side-effects</code>, <code>single</code> and <code>pure</code> syntaxes.</p>\n</blockquote>\n<h6 id="examples">Examples<a href="#examples" aria-hidden="true"><span class="icon icon-link"></span></a></h6>\n<h6 id="es-module-default-import">ES Module Default Import<a href="#es-module-default-import" aria-hidden="true"><span class="icon icon-link"></span></a></h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          imports<span class="token punctuation">:</span> <span class="token string">\'default lib myName\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> myName <span class="token keyword">from</span> <span class="token string">\'lib\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h6 id="commonjs-single-import">CommonJS Single Import<a href="#commonjs-single-import" aria-hidden="true"><span class="icon icon-link"></span></a></h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'./path/to/example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'commonjs\'</span><span class="token punctuation">,</span>\n          imports<span class="token punctuation">:</span> <span class="token string">\'single lib myName\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">var</span> myName <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'lib\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h4 id="object"><code>Object</code><a href="#object" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Allows to use an object to describe an import.</p>\n<p>Properties:</p>\n<ul>\n<li>\n<p><code>syntax</code>:</p>\n<ul>\n<li>if <code>type</code> is <code>module</code>- can be <code>default</code>, <code>named</code>, <code>namespace</code> or <code>side-effects</code></li>\n<li>if <code>type</code> is <code>commonjs</code>- can be <code>single</code>, <code>multiple</code> or <code>pure</code></li>\n</ul>\n</li>\n<li>\n<p><code>moduleName</code> - name of an imported module (<strong>required</strong>)</p>\n</li>\n<li>\n<p><code>name</code> - name of an imported value (<strong>required</strong>)</p>\n</li>\n<li>\n<p><code>alias</code> - alias of an imported value (<strong>may be omitted</strong>)</p>\n</li>\n</ul>\n<blockquote>\n<p>⚠ Alias can\'t be used together with <code>default</code>, <code>namespace</code>, <code>side-effects</code>, <code>single</code> and <code>pure</code> syntaxes.</p>\n</blockquote>\n<h5 id="examples-1">Examples<a href="#examples-1" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                syntax<span class="token punctuation">:</span> <span class="token string">\'named\'</span><span class="token punctuation">,</span>\n                moduleName<span class="token punctuation">:</span> <span class="token string">\'lib_2\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'lib2_method_2\'</span><span class="token punctuation">,</span>\n                alias<span class="token punctuation">:</span> <span class="token string">\'lib_2_method_2_alias\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> lib2_method_2 <span class="token keyword">as</span> lib_2_method_2_alias <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'lib_2\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h4 id="array"><code>Array</code><a href="#array" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Allow to specify multiple imports.\nEach item can be a <a href="https://github.com/webpack-contrib/imports-loader#string"><code>string</code></a> or an <a href="https://github.com/webpack-contrib/imports-loader#object"><code>object</code></a>.</p>\n<h5 id="examples-2">Examples<a href="#examples-2" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n                <span class="token punctuation">{</span>\n                  moduleName<span class="token punctuation">:</span> <span class="token string">\'angular\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token punctuation">{</span>\n                  syntax<span class="token punctuation">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n                  moduleName<span class="token punctuation">:</span> <span class="token string">\'jquery\'</span><span class="token punctuation">,</span>\n                  name<span class="token punctuation">:</span> <span class="token string">\'$\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                <span class="token string">\'default lib_2 lib_2_default\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'named lib_2 lib2_method_1\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'named lib_2 lib2_method_2 lib_2_method_2_alias\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'namespace lib_3 lib_3_all\'</span><span class="token punctuation">,</span>\n                <span class="token string">\'side-effects lib_4\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> angular <span class="token keyword">from</span> <span class="token string">\'angular\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> lib_2_default <span class="token keyword">from</span> <span class="token string">\'lib_2\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> lib2_method_1<span class="token punctuation">,</span> lib2_method_2 <span class="token keyword">as</span> lib_2_method_2_alias <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'lib_2\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> lib_3_all <span class="token keyword">from</span> <span class="token string">\'lib_3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'lib_4\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h3 id="wrapper"><code>wrapper</code><a href="#wrapper" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean|String|Object</code>\nDefault: <code>undefined</code></p>\n<p>Closes the module code in a function with a given <code>thisArg</code> and <code>args</code> (<code>(function () { ... }).call();</code>).</p>\n<blockquote>\n<p>⚠ Do not use this option if source code contains ES module import(s)</p>\n</blockquote>\n<h4 id="boolean"><code>Boolean</code><a href="#boolean" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                moduleName<span class="token punctuation">:</span> <span class="token string">\'jquery\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'$\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              wrapper<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// Code</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h4 id="string-1"><code>String</code><a href="#string-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                moduleName<span class="token punctuation">:</span> <span class="token string">\'jquery\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'$\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              wrapper<span class="token punctuation">:</span> <span class="token string">\'window\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// Code</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h4 id="object-1"><code>Object</code><a href="#object-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                moduleName<span class="token punctuation">:</span> <span class="token string">\'jquery\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'$\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              wrapper<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                thisArg<span class="token punctuation">:</span> <span class="token string">\'window\'</span><span class="token punctuation">,</span>\n                args<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'myVariable\'</span><span class="token punctuation">,</span> <span class="token string">\'myOtherVariable\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>myVariable<span class="token punctuation">,</span> myOtherVariable<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// Code</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> myVariable<span class="token punctuation">,</span> myOtherVariable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h4 id="object-with-different-parameter-names"><code>Object</code> with different parameter names<a href="#object-with-different-parameter-names" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                moduleName<span class="token punctuation">:</span> <span class="token string">\'jquery\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'$\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              wrapper<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                thisArg<span class="token punctuation">:</span> <span class="token string">\'window\'</span><span class="token punctuation">,</span>\n                args<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                  myVariable<span class="token punctuation">:</span> <span class="token string">\'var1\'</span><span class="token punctuation">,</span>\n                  myOtherVariable<span class="token punctuation">:</span> <span class="token string">\'var2\'</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n\n<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>var1<span class="token punctuation">,</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// Code</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> myVariable<span class="token punctuation">,</span> myOtherVariable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>\n<h3 id="additionalcode"><code>additionalCode</code><a href="#additionalcode" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String</code>\nDefault: <code>undefined</code></p>\n<p>Adds custom code as a preamble before the module\'s code.</p>\n<h5 id="examples-3">Examples<a href="#examples-3" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<h6 id="define-custom-variable">Define custom variable<a href="#define-custom-variable" aria-hidden="true"><span class="icon icon-link"></span></a></h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                moduleName<span class="token punctuation">:</span> <span class="token string">\'jquery\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'$\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              additionalCode<span class="token punctuation">:</span> <span class="token string">\'var myVariable = false;\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> myVariable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h6 id="disable-amd-import-syntax">Disable AMD Import Syntax<a href="#disable-amd-import-syntax" aria-hidden="true"><span class="icon icon-link"></span></a></h6>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> require<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'example.js\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token punctuation">:</span> <span class="token string">\'imports-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              imports<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n                moduleName<span class="token punctuation">:</span> <span class="token string">\'jquery\'</span><span class="token punctuation">,</span>\n                name<span class="token punctuation">:</span> <span class="token string">\'$\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              additionalCode<span class="token punctuation">:</span>\n                <span class="token string">\'var define = false; /* Disable AMD for misbehaving libraries */\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>Generate output:</p>\n<pre><code class="hljs language-js"><span class="token keyword">import</span> $ <span class="token keyword">from</span> <span class="token string">\'jquery\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> define <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">/* Disable AMD for misbehaving libraries */</span>\n\n<span class="token comment">// ...</span>\n<span class="token comment">// Code</span>\n<span class="token comment">// ...</span></code></pre>\n<h2 id="contributing">Contributing<a href="#contributing" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<p><a href="https://github.com/webpack-contrib/imports-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/imports-loader/blob/master/LICENSE">MIT</a></p>\n'}}]);