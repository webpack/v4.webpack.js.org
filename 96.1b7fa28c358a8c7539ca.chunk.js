(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{357:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/eslint-loader"><img src="https://img.shields.io/npm/v/eslint-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/eslint-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/eslint-loader"><img src="https://david-dm.org/webpack-contrib/eslint-loader.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/eslint-loader/actions"><img src="https://github.com/webpack-contrib/eslint-loader/workflows/eslint-loader/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/eslint-loader"><img src="https://codecov.io/gh/webpack-contrib/eslint-loader/branch/master/graph/badge.svg" alt="coverage"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://badges.gitter.im/webpack/webpack.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=eslint-loader"><img src="https://packagephobia.now.sh/badge?p=eslint-loader" alt="size"></a></p>\n<blockquote>\n<p>A ESlint loader for webpack</p>\n</blockquote>\n<h2 id="warning-deprecated">:warning: DEPRECATED<a href="#warning-deprecated" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><code>eslint-loader</code> has been deprecated. Please use <a href="/plugins/eslint-webpack-plugin/"><code>eslint-webpack-plugin</code></a>.</p>\n<h2 id="install">Install<a href="#install" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> eslint-loader --save-dev</code></pre>\n<p><strong>Note</strong>: You also need to install <code>eslint</code> from npm, if you haven\'t already:</p>\n<pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> eslint --save-dev</code></pre>\n<h2 id="usage">Usage<a href="#usage" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>In your webpack configuration:</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// eslint options (if necessary)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>When using with transpiling loaders (like <code>babel-loader</code>), make sure they are in correct order (bottom to top). Otherwise files will be checked after being processed by <code>babel-loader</code>:</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'babel-loader\'</span><span class="token punctuation">,</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>To be safe, you can use <code>enforce: \'pre\'</code> section to check source files, not modified by other loaders (like <code>babel-loader</code>):</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        enforce<span class="token punctuation">:</span> <span class="token string">\'pre\'</span><span class="token punctuation">,</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'babel-loader\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>You can pass <a href="http://eslint.org/docs/developer-guide/nodejs-api#cliengine">eslint options</a> using standard webpack <a href="/configuration/module/#useentry">loader options</a>.</p>\n<p><strong>Note</strong>: That the config option you provide will be passed to the <code>CLIEngine</code>. This is a different set of options than what you\'d specify in <code>package.json</code> or <code>.eslintrc</code>. See the <a href="http://eslint.org/docs/developer-guide/nodejs-api#cliengine">eslint docs</a> for more detail.</p>\n<h3 id="cache"><code>cache</code><a href="#cache" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<ul>\n<li>Type: <code>Boolean|String</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>This option will enable caching of the linting results into a file. This is particularly useful in reducing linting time when doing a full build.</p>\n<p>This can either be a <code>boolean</code> value or the cache directory path(ex: <code>\'./.eslint-loader-cache\'</code>).</p>\n<p>If <code>cache: true</code> is used, the cache is written to the <code>./node_modules/.cache/eslint-loader</code> directory. This is the recommended usage.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          cache<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="eslintpath"><code>eslintPath</code><a href="#eslintpath" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<ul>\n<li>Type: <code>String</code></li>\n<li>Default: <code>eslint</code></li>\n</ul>\n<p>Path to <code>eslint</code> instance that will be used for linting. If the <code>eslintPath</code> is a folder like a official eslint, or specify a <code>formatter</code> option. Now you dont have to install <code>eslint</code>.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          eslintPath<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'reusable-eslint\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="fix"><code>fix</code><a href="#fix" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<ul>\n<li>Type: <code>Boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>This option will enable <a href="http://eslint.org/docs/user-guide/command-line-interface#fix">ESLint autofix feature</a>.</p>\n<p><strong>Be careful: this option will change source files.</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          fix<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="formatter"><code>formatter</code><a href="#formatter" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<ul>\n<li>Type: <code>String|Function</code></li>\n<li>Default: <code>stylish</code></li>\n</ul>\n<p>This option accepts a function that will have one argument: an array of eslint messages (object). The function must return the output as a string. You can use official <a href="https://eslint.org/docs/user-guide/formatters/">eslint formatters</a>.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// several examples !</span>\n\n          <span class="token comment">// default value</span>\n          formatter<span class="token punctuation">:</span> <span class="token string">\'stylish\'</span><span class="token punctuation">,</span>\n\n          <span class="token comment">// community formatter</span>\n          formatter<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'eslint-friendly-formatter\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n          <span class="token comment">// custom formatter</span>\n          formatter<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>results<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// `results` format is available here</span>\n            <span class="token comment">// http://eslint.org/docs/developer-guide/nodejs-api.html#executeonfiles()</span>\n\n            <span class="token comment">// you should return a string</span>\n            <span class="token comment">// DO NOT USE console.*() directly !</span>\n            <span class="token keyword">return</span> <span class="token string">\'OUTPUT\'</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="errors-and-warning">Errors and Warning<a href="#errors-and-warning" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>By default the loader will auto adjust error reporting depending on eslint errors/warnings counts.</strong> You can still force this behavior by using <code>emitError</code> <strong>or</strong> <code>emitWarning</code> options:</p>\n<h4 id="emiterror"><code>emitError</code><a href="#emiterror" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<ul>\n<li>Type: <code>Boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>Will always return errors, if this option is set to <code>true</code>.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          emitError<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="emitwarning"><code>emitWarning</code><a href="#emitwarning" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<ul>\n<li>Type: <code>Boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>Will always return warnings, if option is set to <code>true</code>. <strong>If you\'re using hot module replacement, you may wish to enable this in development, or else updates will be skipped when there\'s an eslint error.</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          emitWarning<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="failonerror"><code>failOnError</code><a href="#failonerror" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<ul>\n<li>Type: <code>Boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>Will cause the module build to fail if there are any errors, if option is set to <code>true</code>.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          failOnError<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="failonwarning"><code>failOnWarning</code><a href="#failonwarning" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<ul>\n<li>Type: <code>Boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>Will cause the module build to fail if there are any warnings, if option is set to <code>true</code>.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          failOnWarning<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="quiet"><code>quiet</code><a href="#quiet" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<ul>\n<li>Type: <code>Boolean</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>Will process and report errors only and ignore warnings, if this option is set to <code>true</code>.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          quiet<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="outputreport"><code>outputReport</code><a href="#outputreport" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<ul>\n<li>Type: <code>Boolean|Object</code></li>\n<li>Default: <code>false</code></li>\n</ul>\n<p>Write the output of the errors to a file, for example a checkstyle xml file for use for reporting on Jenkins CI.</p>\n<p>The <code>filePath</code> is an absolute path or relative to the webpack config: <code>output.path</code>. You can pass in a different <code>formatter</code> for the output file, if none is passed in the default/configured formatter will be used.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token punctuation">:</span> <span class="token string">\'...\'</span><span class="token punctuation">,</span>\n  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js$/</span><span class="token punctuation">,</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>\n        loader<span class="token punctuation">:</span> <span class="token string">\'eslint-loader\'</span><span class="token punctuation">,</span>\n        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          outputReport<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            filePath<span class="token punctuation">:</span> <span class="token string">\'checkstyle.xml\'</span><span class="token punctuation">,</span>\n            formatter<span class="token punctuation">:</span> <span class="token string">\'checkstyle\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="gotchas">Gotchas<a href="#gotchas" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="noemitonerrorsplugin">NoEmitOnErrorsPlugin<a href="#noemitonerrorsplugin" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><code>NoEmitOnErrorsPlugin</code> is now automatically enabled in webpack 4, when mode is either unset, or set to production. So even ESLint warnings will fail the build. No matter what error settings are used for <code>eslint-loader</code>, except if <code>emitWarning</code> enabled.</p>\n<h3 id="defining-configfile-or-using-eslint--c-patheslintrc">Defining <code>configFile</code> or using <code>eslint -c path/.eslintrc</code><a href="#defining-configfile-or-using-eslint--c-patheslintrc" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Bear in mind that when you define <code>configFile</code>, <code>eslint</code> doesn\'t automatically look for <code>.eslintrc</code> files in the directory of the file to be linted. More information is available in official eslint documentation in section <a href="http://eslint.org/docs/user-guide/configuring#using-configuration-files"><em>Using Configuration Files</em></a>. See <a href="https://github.com/webpack-contrib/eslint-loader/issues/129">#129</a>.</p>\n<h2 id="changelog">Changelog<a href="#changelog" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/eslint-loader/blob/master/CHANGELOG.md">Changelog</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/eslint-loader/blob/master/LICENSE">MIT</a></p>\n'}}]);