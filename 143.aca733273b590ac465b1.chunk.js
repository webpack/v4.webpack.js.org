(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{404:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/terser-webpack-plugin"><img src="https://img.shields.io/npm/v/terser-webpack-plugin.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/terser-webpack-plugin.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/terser-webpack-plugin"><img src="https://david-dm.org/webpack-contrib/terser-webpack-plugin.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/terser-webpack-plugin/actions"><img src="https://github.com/webpack-contrib/terser-webpack-plugin/workflows/terser-webpack-plugin/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/terser-webpack-plugin"><img src="https://codecov.io/gh/webpack-contrib/terser-webpack-plugin/branch/master/graph/badge.svg" alt="cover"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=terser-webpack-plugin"><img src="https://packagephobia.now.sh/badge?p=terser-webpack-plugin" alt="size"></a></p>\n<p>This plugin uses <a href="https://github.com/terser-js/terser">terser</a> to minify your JavaScript.</p>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>If you are using webpack v5 or above you do not need to install this plugin. Webpack v5 comes with the latest <code>terser-webpack-plugin</code> out of the box. Using Webpack v4, you have to install <code>terser-webpack-plugin</code> v4.</p>\n<p>To begin, you\'ll need to install <code>terser-webpack-plugin</code>:</p>\n<pre><code class="hljs language-console">$ npm install terser-webpack-plugin --save-dev\n</code></pre>\n<p>Then add the plugin to your <code>webpack</code> config. For example:</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js"><span class="token keyword">const</span> TerserPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"terser-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>And run <code>webpack</code> via your preferred method.</p>\n<h2 id="note-about-source-maps">Note about source maps<a href="#note-about-source-maps" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><strong>Works only with <code>source-map</code>, <code>inline-source-map</code>, <code>hidden-source-map</code> and <code>nosources-source-map</code> values for the <a href="/configuration/devtool/"><code>devtool</code></a> option.</strong></p>\n<p>Why?</p>\n<ul>\n<li><code>eval</code> wraps modules in <code>eval("string")</code> and the minimizer does not handle strings.</li>\n<li><code>cheap</code> has not column information and minimizer generate only a single line, which leave only a single mapping.</li>\n</ul>\n<p>Using supported <code>devtool</code> values enable source map generation.</p>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="test"><code>test</code><a href="#test" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|RegExp|Array&#x3C;String|RegExp></code>\nDefault: <code>/\\.m?js(\\?.*)?$/i</code></p>\n<p>Test to match files against.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        test<span class="token punctuation">:</span> <span class="token regex">/\\.js(\\?.*)?$/i</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="include"><code>include</code><a href="#include" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|RegExp|Array&#x3C;String|RegExp></code>\nDefault: <code>undefined</code></p>\n<p>Files to include.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        include<span class="token punctuation">:</span> <span class="token regex">/\\/includes/</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="exclude"><code>exclude</code><a href="#exclude" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|RegExp|Array&#x3C;String|RegExp></code>\nDefault: <code>undefined</code></p>\n<p>Files to exclude.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        exclude<span class="token punctuation">:</span> <span class="token regex">/\\/excludes/</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="parallel"><code>parallel</code><a href="#parallel" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean|Number</code>\nDefault: <code>true</code></p>\n<p>Use multi-process parallel running to improve the build speed.\nDefault number of concurrent runs: <code>os.cpus().length - 1</code>.</p>\n<blockquote>\n<p>ℹ️ Parallelization can speedup your build significantly and is therefore <strong>highly recommended</strong>.</p>\n<p>⚠️ If you use <strong>Circle CI</strong> or any other environment that doesn\'t provide real available count of CPUs then you need to setup explicitly number of CPUs to avoid <code>Error: Call retries were exceeded</code> (see <a href="https://github.com/webpack-contrib/terser-webpack-plugin/issues/143">#143</a>, <a href="https://github.com/webpack-contrib/terser-webpack-plugin/issues/202">#202</a>).</p>\n</blockquote>\n<h4 id="boolean"><code>Boolean</code><a href="#boolean" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Enable/disable multi-process parallel running.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        parallel<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="number"><code>Number</code><a href="#number" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Enable multi-process parallel running and set number of concurrent runs.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        parallel<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="minify"><code>minify</code><a href="#minify" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Function</code>\nDefault: <code>undefined</code></p>\n<p>Allows you to override default minify function.\nBy default plugin uses <a href="https://github.com/terser-js/terser">terser</a> package.\nUseful for using and testing unpublished versions or forks.</p>\n<blockquote>\n<p>⚠️ <strong>Always use <code>require</code> inside <code>minify</code> function when <code>parallel</code> option enabled</strong>.</p>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          myCustomOption<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">// Can be async</span>\n        minify<span class="token punctuation">:</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> sourceMap<span class="token punctuation">,</span> minimizerOptions<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// The `minimizerOptions` option contains option from the `terserOptions` option</span>\n          <span class="token comment">// You can use `minimizerOptions.myCustomOption`</span>\n          <span class="token keyword">const</span> extractedComments <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n          <span class="token comment">// Custom logic for extract comments</span>\n\n          <span class="token keyword">const</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"uglify-module"</span><span class="token punctuation">)</span> <span class="token comment">// Or require(\'./path/to/uglify-module\')</span>\n            <span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n              <span class="token comment">/* Your options for minification */</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">return</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> code<span class="token punctuation">,</span> extractedComments <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="terseroptions"><code>terserOptions</code><a href="#terseroptions" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Object</code>\nDefault: <a href="https://github.com/terser-js/terser#minify-options">default</a></p>\n<p>Terser minify <a href="https://github.com/terser-js/terser#minify-options">options</a>.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          ecma<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>\n          parse<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n          compress<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n          mangle<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Note `mangle.properties` is `false` by default.</span>\n          module<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token comment">// Deprecated</span>\n          output<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n          format<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n          toplevel<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          nameCache<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n          ie8<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          keep_classnames<span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>\n          keep_fnames<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          safari10<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="extractcomments"><code>extractComments</code><a href="#extractcomments" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean|String|RegExp|Function&#x3C;(node, comment) -> Boolean|Object>|Object</code>\nDefault: <code>true</code></p>\n<p>Whether comments shall be extracted to a separate file, (see <a href="https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a">details</a>).\nBy default extract only comments using <code>/^\\**!|@preserve|@license|@cc_on/i</code> regexp condition and remove remaining comments.\nIf the original file is named <code>foo.js</code>, then the comments will be stored to <code>foo.js.LICENSE.txt</code>.\nThe <code>terserOptions.format.comments</code> option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.</p>\n<h4 id="boolean-1"><code>Boolean</code><a href="#boolean-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Enable/disable extracting comments.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="string"><code>String</code><a href="#string" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Extract <code>all</code> or <code>some</code> (use <code>/^\\**!|@preserve|@license|@cc_on/i</code> RegExp) comments.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token string">"all"</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="regexp"><code>RegExp</code><a href="#regexp" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>All comments that match the given expression will be extracted to the separate file.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token regex">/@extract/i</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="functionnode-comment---boolean"><code>Function&#x3C;(node, comment) -> Boolean></code><a href="#functionnode-comment---boolean" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>All comments that match the given expression will be extracted to the separate file.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token punctuation">(</span>astNode<span class="token punctuation">,</span> comment<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/@extract/i</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>comment<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n\n          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="object"><code>Object</code><a href="#object" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Allow to customize condition for extract comments, specify extracted file name and banner.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          condition<span class="token punctuation">:</span> <span class="token regex">/^\\**!|@preserve|@license|@cc_on/i</span><span class="token punctuation">,</span>\n          filename<span class="token punctuation">:</span> <span class="token punctuation">(</span>fileData<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// The "fileData" argument contains object with "filename", "basename", "query" and "hash"</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.LICENSE.txt</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          banner<span class="token punctuation">:</span> <span class="token punctuation">(</span>licenseFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`License information can be found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>licenseFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h5 id="condition"><code>condition</code><a href="#condition" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p>Type: <code>Boolean|String|RegExp|Function&#x3C;(node, comment) -> Boolean|Object></code></p>\n<p>Condition what comments you need extract.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          condition<span class="token punctuation">:</span> <span class="token string">"some"</span><span class="token punctuation">,</span>\n          filename<span class="token punctuation">:</span> <span class="token punctuation">(</span>fileData<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// The "fileData" argument contains object with "filename", "basename", "query" and "hash"</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.LICENSE.txt</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          banner<span class="token punctuation">:</span> <span class="token punctuation">(</span>licenseFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`License information can be found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>licenseFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h5 id="filename"><code>filename</code><a href="#filename" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p>Type: <code>String|Function&#x3C;(string) -> String></code>\nDefault: <code>[file].LICENSE.txt[query]</code></p>\n<p>Available placeholders: <code>[file]</code>, <code>[query]</code> and <code>[filebase]</code> (<code>[base]</code> for webpack 5).</p>\n<p>The file where the extracted comments will be stored.\nDefault is to append the suffix <code>.LICENSE.txt</code> to the original filename.</p>\n<blockquote>\n<p>⚠️ We highly recommend using the <code>txt</code> extension. Using <code>js</code>/<code>cjs</code>/<code>mjs</code> extensions may conflict with existing assets which leads to broken code.</p>\n</blockquote>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          condition<span class="token punctuation">:</span> <span class="token regex">/^\\**!|@preserve|@license|@cc_on/i</span><span class="token punctuation">,</span>\n          filename<span class="token punctuation">:</span> <span class="token string">"extracted-comments.js"</span><span class="token punctuation">,</span>\n          banner<span class="token punctuation">:</span> <span class="token punctuation">(</span>licenseFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`License information can be found in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>licenseFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h5 id="banner"><code>banner</code><a href="#banner" aria-hidden="true"><span class="icon icon-link"></span></a></h5>\n<p>Type: <code>Boolean|String|Function&#x3C;(string) -> String></code>\nDefault: <code>/*! For license information please see ${commentsFile} */</code></p>\n<p>The banner text that points to the extracted file and will be added on top of the original file.\nCan be <code>false</code> (no banner), a <code>String</code>, or a <code>Function&#x3C;(string) -> String></code> that will be called with the filename where extracted comments have been stored.\nWill be wrapped into comment.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        extractComments<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          condition<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          filename<span class="token punctuation">:</span> <span class="token punctuation">(</span>fileData<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token comment">// The "fileData" argument contains object with "filename", "basename", "query" and "hash"</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.LICENSE.txt</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileData<span class="token punctuation">.</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          banner<span class="token punctuation">:</span> <span class="token punctuation">(</span>commentsFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`My custom banner about license information </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>commentsFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="examples">Examples<a href="#examples" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="preserve-comments">Preserve Comments<a href="#preserve-comments" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Extract all legal comments (i.e. <code>/^\\**!|@preserve|@license|@cc_on/i</code>) and preserve <code>/@license/i</code> comments.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          format<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            comments<span class="token punctuation">:</span> <span class="token regex">/@license/i</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        extractComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="remove-comments">Remove Comments<a href="#remove-comments" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you avoid building with comments, use this config:</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        terserOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          format<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            comments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        extractComments<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="custom-minify-function">Custom Minify Function<a href="#custom-minify-function" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Override default minify function - use <code>uglify-js</code> for minification.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    minimize<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    minimizer<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token keyword">new</span> <span class="token class-name">TerserPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        minify<span class="token punctuation">:</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> sourceMap<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token comment">// https://github.com/mishoo/UglifyJS2#minify-options</span>\n          <span class="token keyword">const</span> uglifyJsOptions <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token comment">/* your `uglify-js` package options */</span>\n          <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>sourceMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            uglifyJsOptions<span class="token punctuation">.</span>sourceMap <span class="token operator">=</span> <span class="token punctuation">{</span>\n              content<span class="token punctuation">:</span> sourceMap<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n\n          <span class="token keyword">return</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"uglify-js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">minify</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> uglifyJsOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="contributing">Contributing<a href="#contributing" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<p><a href="https://github.com/webpack-contrib/terser-webpack-plugin/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/terser-webpack-plugin/blob/master/LICENSE">MIT</a></p>\n'}}]);